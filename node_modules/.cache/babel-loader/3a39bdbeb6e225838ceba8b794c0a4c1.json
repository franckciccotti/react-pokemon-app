{"ast":null,"code":"import { error } from \"console\";\nexport default class PokemonService {\n  static getPokemons() {\n    return fetch('http://localhost:3001/pokemons').then(response => response.json()).catch(error => this.handleError(error));\n  }\n  static getPokemon(id) {\n    return fetch(`http://localhost:3001/pokemons/${id}`).then(response => response.json()).then(data => this.isEmpty(data) ? null : data).catch(error => this.handleError(error));\n  }\n  static updatePokemon(pokemon) {\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(pokemon),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n  static deletePokemon(pokemon) {\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n  static addPokemon(pokemon) {\n    delete pokemon.created;\n    return fetch(`http://localhost:3001/pokemons`, {\n      method: 'POST',\n      body: JSON.stringify(pokemon),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => Response.json()).catch(error);\n  }\n  static isEmpty(data) {\n    return Object.keys(data).length === 0;\n  }\n  static handleError(error) {\n    console.error(error);\n  }\n}","map":{"version":3,"names":["error","PokemonService","getPokemons","fetch","then","response","json","catch","handleError","getPokemon","id","data","isEmpty","updatePokemon","pokemon","method","body","JSON","stringify","headers","deletePokemon","addPokemon","created","Response","Object","keys","length","console"],"sources":["C:/Users/franc/Downloads/React-pokemons-app/src/services/pokemon-service.ts"],"sourcesContent":["import { error } from \"console\";\r\nimport Pokemon from \"../models/pokemon\";\r\n \r\nexport default class PokemonService {\r\n \r\n  static getPokemons(): Promise<Pokemon[]> {\r\n    return fetch('http://localhost:3001/pokemons')\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n  }\r\n \r\n  static getPokemon(id: number): Promise<Pokemon|null> {\r\n    return fetch(`http://localhost:3001/pokemons/${id}`)\r\n      .then(response => response.json())\r\n      .then(data => this.isEmpty(data) ? null : data)\r\n      .catch(error => this.handleError(error));\r\n  }\r\n\r\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(pokemon),\r\n      headers: { 'Content-Type': 'application/json'}\r\n    })\r\n    .then(response => response.json())\r\n    .catch(error => this.handleError(error));\r\n  }\r\n \r\n  static deletePokemon(pokemon: Pokemon): Promise<{}>{\r\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n      method: 'DELETE',\r\n      headers: { 'Content-Type': 'application/json' }\r\n  })\r\n  .then(response => response.json())\r\n  .catch(error => this.handleError(error));\r\n  }\r\n\r\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    delete pokemon.created;\r\n\r\n    return fetch(`http://localhost:3001/pokemons`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(pokemon),\r\n      headers: { 'Content-Type': 'application/json' }\r\n  })\r\n    .then(response => Response.json())\r\n    .catch(error)\r\n  }\r\n\r\n  static isEmpty(data: Object): boolean {\r\n    return Object.keys(data).length === 0;\r\n  }\r\n\r\n  static handleError(error: Error): void {\r\n    console.error(error);\r\n  }\r\n\r\n}"],"mappings":"AAAA,SAASA,KAAK,QAAQ,SAAS;AAG/B,eAAe,MAAMC,cAAc,CAAC;EAElC,OAAOC,WAAWA,CAAA,EAAuB;IACvC,OAAOC,KAAK,CAAC,gCAAgC,CAAC,CAC3CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACP,KAAK,IAAI,IAAI,CAACQ,WAAW,CAACR,KAAK,CAAC,CAAC;EAC5C;EAEA,OAAOS,UAAUA,CAACC,EAAU,EAAyB;IACnD,OAAOP,KAAK,CAAE,kCAAiCO,EAAG,EAAC,CAAC,CACjDN,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACO,IAAI,IAAI,IAAI,CAACC,OAAO,CAACD,IAAI,CAAC,GAAG,IAAI,GAAGA,IAAI,CAAC,CAC9CJ,KAAK,CAACP,KAAK,IAAI,IAAI,CAACQ,WAAW,CAACR,KAAK,CAAC,CAAC;EAC5C;EAEA,OAAOa,aAAaA,CAACC,OAAgB,EAAoB;IACvD,OAAOX,KAAK,CAAE,kCAAiCW,OAAO,CAACJ,EAAG,EAAC,EAAE;MAC3DK,MAAM,EAAE,KAAK;MACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC;MAC7BK,OAAO,EAAE;QAAE,cAAc,EAAE;MAAkB;IAC/C,CAAC,CAAC,CACDf,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACP,KAAK,IAAI,IAAI,CAACQ,WAAW,CAACR,KAAK,CAAC,CAAC;EAC1C;EAEA,OAAOoB,aAAaA,CAACN,OAAgB,EAAc;IACjD,OAAOX,KAAK,CAAE,kCAAiCW,OAAO,CAACJ,EAAG,EAAC,EAAE;MAC3DK,MAAM,EAAE,QAAQ;MAChBI,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAClD,CAAC,CAAC,CACDf,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACP,KAAK,IAAI,IAAI,CAACQ,WAAW,CAACR,KAAK,CAAC,CAAC;EACxC;EAEA,OAAOqB,UAAUA,CAACP,OAAgB,EAAoB;IACpD,OAAOA,OAAO,CAACQ,OAAO;IAEtB,OAAOnB,KAAK,CAAE,gCAA+B,EAAE;MAC7CY,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC;MAC7BK,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAClD,CAAC,CAAC,CACCf,IAAI,CAACC,QAAQ,IAAIkB,QAAQ,CAACjB,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACP,KAAK,CAAC;EACf;EAEA,OAAOY,OAAOA,CAACD,IAAY,EAAW;IACpC,OAAOa,MAAM,CAACC,IAAI,CAACd,IAAI,CAAC,CAACe,MAAM,KAAK,CAAC;EACvC;EAEA,OAAOlB,WAAWA,CAACR,KAAY,EAAQ;IACrC2B,OAAO,CAAC3B,KAAK,CAACA,KAAK,CAAC;EACtB;AAEF"},"metadata":{},"sourceType":"module"}